<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

  <!--扫描service包下所有使用注解的类型-->
  <context:component-scan base-package="com.muyiquan.rbac.service"/>

  <!--配置数据库相关参数properties的属性:${url}-->
  <context:property-placeholder location="classpath:jdbc.properties"/>

  <!-- 数据源配置, 使用 Druid 数据库连接池 -->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
        init-method="init" destroy-method="close">
    <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
    <property name="driverClassName" value="${jdbc.driver}" />

    <!-- 基本属性 url、user、password -->
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />

    <!-- 配置初始化大小、最小、最大 -->
    <property name="initialSize" value="${jdbc.pool.init}" />
    <property name="minIdle" value="${jdbc.pool.minIdle}" />
    <property name="maxActive" value="${jdbc.pool.maxActive}" />

    <!-- 配置获取连接等待超时的时间 -->
    <property name="maxWait" value="60000" />

    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000" />

    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="300000" />

    <property name="validationQuery" value="${jdbc.testSql}" />
    <property name="testWhileIdle" value="true" />
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />

    <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用） <property name="poolPreparedStatements"
        value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize"
        value="20" /> -->

    <!-- 配置监控统计拦截的filters -->
    <property name="filters" value="stat" />
  </bean>

  <!--配置SqlSessionFactory对象-->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!--注入数据库连接池-->
    <property name="dataSource" ref="dataSource"></property>
    <!--扫描model包 使用别名-->
    <property name="typeAliasesPackage" value="com.muyiquan.rbac.model"></property>
    <!--扫描sql配置文件：mapper需要的xml文件-->
    <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
  </bean>

  <!--配置扫描Dao接口包，动态实现Dao接口，注入spring容器中-->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <!--注入sqlSessionFactory-->
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    <!--给出需要扫描Dao接口包-->
    <property name="basePackage" value="com.muyiquan.rbac.dao"></property>
  </bean>

  <!--配置事务管理器-->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <!--注入数据库连接池-->
    <property name="dataSource" ref="dataSource"></property>
  </bean>
  <!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务 -->
  <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

</beans>
